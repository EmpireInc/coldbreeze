# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Enable webjar based resources to be returned
GET         /webjars/*file                                      controllers.WebJarAssets.at(file)

# Home page
GET         /                                                   @controllers.Application.index()
GET         /index11                                            @controllers.Application.index11()
#POST    /login                  @controllers.Application.login()

->          /auth                                               securesocial.Routes

# Login page
#GET     /login                      securesocial.controllers.LoginPage.login
#GET     /logout                     securesocial.controllers.LoginPage.logout

# User Registration and password handling 
#GET     /signup                     securesocial.controllers.Registration.startSignUp
#POST    /signup                     securesocial.controllers.Registration.handleStartSignUp
#GET     /signup/:token              securesocial.controllers.Registration.signUp(token)
POST        /signup/:token                                      @controllers.CustomRegistrationController.handleSignUp(token)
#GET     /reset                      securesocial.controllers.Registration.startResetPassword
#POST    /reset                      securesocial.controllers.Registration.handleStartResetPassword
#GET     /reset/:token               securesocial.controllers.Registration.resetPassword(token)
#POST    /reset/:token               securesocial.controllers.Registration.handleResetPassword(token)
#GET     /password                   securesocial.controllers.PasswordChange.page
#POST    /password                   securesocial.controllers.PasswordChange.handlePasswordChange

# Providers entry points
#GET     /authenticate/:provider     securesocial.controllers.ProviderController.authenticate(provider)
#POST    /authenticate/:provider     securesocial.controllers.ProviderController.authenticateByPost(provider)
#GET     /not-authorized             securesocial.controllers.ProviderController.notAuthorized

GET         /only-twitter                                       @controllers.Application.onlyTwitter
GET         /link-result                                        @controllers.Application.linkResult
GET         /current-user                                       @controllers.Application.currentUser

# Custom
GET         /custom/login                                       @controllers.CustomLoginController.login
GET         /custom/logout                                      @controllers.CustomLoginController.logout

# Businesses
GET         /businesses                                         @controllers.BusinessController.index()
GET         /business/create                                    @controllers.BusinessController.create()
POST        /business/create                                    @controllers.BusinessController.create_new()
GET         /business/update/:id                                @controllers.BusinessController.update(id: Int)
POST        /business/update/:id                                @controllers.BusinessController.update_make(id: Int)
# Services
GET         /services                                           @controllers.BusinessServiceController.index()
GET         /service/create                                     @controllers.BusinessServiceController.create()
POST        /service/create                                     @controllers.BusinessServiceController.create_new()
GET         /service/update/:id                                 @controllers.BusinessServiceController.update(id: Int)
POST        /service/update/:id                                 @controllers.BusinessServiceController.update_make(id: Int)
POST        /service/:id/destroy                                @controllers.BusinessServiceController.destroy(id: Int)
# Employees
GET         /employees                                          @controllers.users.EmployeeController.index()
GET         /employee/create                                    @controllers.users.EmployeeController.create()
POST        /employee/create                                    @controllers.users.EmployeeController.create_new()
GET         /employee/update/:id                                @controllers.users.EmployeeController.update(id: Int)

GET         /employee/:employee_id/assign/:business_id          @controllers.users.EmployeeController.assign_business(employee_id: Int, business_id: Int)
GET         /employee/:employee_id/unassign/:business_id        @controllers.users.EmployeeController.unassign_business(employee_id: Int, business_id: Int)

POST        /employee/update/:id                                @controllers.users.EmployeeController.update_make(id: Int)
POST        /employee/:id/destroy                               @controllers.users.EmployeeController.destroy(id: Int)
# Clients
GET         /clients                                            @controllers.users.ClientController.index()
GET         /client/create                                      @controllers.users.ClientController.create()
POST        /client/create                                      @controllers.users.ClientController.create_new()
GET         /client/update/:id                                  @controllers.users.ClientController.update(id: Int)
POST        /client/update/:id                                  @controllers.users.ClientController.update_make(id: Int)
POST        /client/:id/destroy                                 @controllers.users.ClientController.destroy(id: Int)
GET         /client/:client_id/assign/:business_id              @controllers.users.ClientController.assign_business(client_id: Int, business_id: Int)
GET         /client/:client_id/unassign/:business_id            @controllers.users.ClientController.unassign_business(client_id: Int, business_id: Int)


# App

GET         /a                                                  @controllers.Application.app()
POST        /whoami                                             @controllers.Application.whoami()




##################################################################
# BProcess
GET         /bprocess/index                                     @controllers.Application.bprocesses()
GET         /bprocesses                                         @controllers.Application.bprocess()
POST        /bprocesses                                         @controllers.Application.create_bprocess()
GET         /bprocess/:id/info                                  @controllers.Application.show_bprocess(id: Int)
PUT         /bprocess/:id/info                                  @controllers.Application.update_bprocess(id: Int)

# BProcess Front Elements
GET         /bprocess/:id/elements                              @controllers.Application.bpElems(id: Int)
POST        /bprocess/:id/elements                              @controllers.Application.createBpElem(id: Int)

#GET         /bprocesses                 BPDAO.getAll
#POST        /bprocesses                 entity(as[BProcessDTO])        BPDAO.pull_object(bprocess)
#GET         /bprocess_full/:id          BPInfo(ProcElemDAO.findByBPId(id), BPStationDAO.findByBPId(id), BPLoggerDAO.findByBPId(id))
#GET         /bprocess/:id/info
#GET         /bprocess/:id/elements        ProcElemDAO.findByBPId(id)
#GET         /bprocess/:id/spaces        ProcElemDAO.findByBPId(id)
#GET         /bprocess/:id/space_elements        ProcElemDAO.findByBPId(id)
#GET         /bprocess/:id/logs            BPLoggerDAO.findByBPId(id)
#GET         /bprocess/:id/stations        BPStationDAO.findByBPId(id)
#GET         /bprocess/:id/active_stations BPStationDAO.areActiveForBP(id)
#GET         /bprocess/:id/last_run        BPLoggerDAO.lastRunOfBP(id)
#GET         /bprocess/:id/invoke


#GET  /block/:id/info                ProcElemDAO.findById(id)
#GET  
#POST /block/:id/order               ProcElemDAO.update_order(id, orderNum)
#GET  /logs/:id                      BPLoggerDAO.findByBPId(id)
#GET  /log/:id                       BPLoggerDAO.findById(id)
#GET  /stations/:id                  BPStationDAO.findByBPId(id)
#GET  /station/:id                   BPStationDAO.findById(id)
#POST /station/:id/halt              HALT
#POST /station/:id/inputcall
#GET /station/:id/threads
######################################################################





# Send token by email
##GET         /api/v1/token/get           controllers.APIController.getToken()
##GET         /api/v1/token/              controllers.APIController.readToken()
##GET         /api/v1/token/:token        controllers.APIController.readByToken(token: String)


# JavaScript routes object
GET         /jsroutes.js                                        @controllers.Application.jsRoutes()

GET         /assets/*file                                       controllers.Assets.versioned(path="/public", file: Asset)
# Map the JS resource paths
GET         /*file                                              controllers.Assets.at(path="/public", file)

