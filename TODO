



















* Security Restrict DTO Action(bprocess, procelems, space, check access)
* Change ID to LONG everywhere


* Input try
http://jsfiddle.net/fdDph/9/
http://plnkr.co/edit/mNs6HB86p6ioByul0GD9?p=preview
http://embed.plnkr.co/TAXmsQlSkYhY2isCKIAw/preview


-------------------------------------------------------
-------------------------------------------------------
Input -> Input call -> Station



* Error ajax
http://kufli.blogspot.ru/2013/08/sprayio-rest-service-exception.html
http://plnkr.co/edit/lzYaZt?p=preview
http://www.egobrain.ru/blog/2014/02/13/obrabotka-oshibok-poumolchaniiu-angularjs/



* Blocks {
  || Process owning, viewers, access // by owning tables Employees/Clients/Firm + Groups assigns
  }

TRY https://github.com/t2v/stackable-controller

































* Misc

  * Dopel feature
  * Graph.js


/Final/
  * Collab & sharing
  * Link block[Input, return, ...]
  * Block store
  * BDocuments
  * K-V Properties for resources
  * Observer block http://www.activiti.org/userguide/index.html#bpmnEvents
  * Triggers(that runs something just from template and request[POST /auth/token?acton=...])

* Assembled
  * BProcess returns
  * CTX[Res -> BPS]
  * FrameMarker
  * main.scala.maps.FrameLink ctx-ctx links
  ** main.scala.utils.Space || Make support for frame elements
  * Assembly Function [ Provide access to triple (object, params, arguments)] 1. req(el, in), assebmly(frame), running
  ** [* CHAIN Invoke -> Process -> Process ]
  * Return in BProcess  [ Blocks that comes after process invoked ]
  * Return in ProcElems [ Block that return blocks and arg&params ]

  * Bridge
  * Behav Resources
  * Behav model methods and elements
  * Templates BP, ctx, sbj?
  * Neo4J integration?
  * Complex block
  * Block register / Elem -> Block conversion
  * Sandbox for testing external Blocks
  * Service
  * RPC
  * Zappier
  * Regressor-core
