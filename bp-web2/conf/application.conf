include "securesocial.conf"

# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.crypto.secret="ki:s:[[@=Ag?QI`W2jMwkY:eqvrJ]JqoJyi2axj3ZvOv^/KavOT4ViJSv?6YY4[N"

# The application languages
# ~~~~~
play.i18n.langs=["en","ru"]
testserver.port=9000

# Mail
#smtp.mock=false
#mail.failTo="a@minorityapp.com"

#mail.host=email-smtp.us-east-1.amazonaws.com
#mail.port=465

#only required if mail.auth=true (the default)
#mail.username="AKIAIC55PUS7LMDFIBFQ"
#mail.password="ApZ7lXfuMfRgyoitO1aIJoi3UEjESsNVrACNr6RUR9H"

ehcacheplugin=disabled

# Captcha
recaptcha.apiVersion=2
recaptcha.privateKey=6LfFxSUTAAAAAOaJuYV2EAxAoQDWx86lo0G0Eyt1

# This is the public key that Google reCAPTCHA issues when you register
recaptcha.publicKey=6LfFxSUTAAAAABR2lkPHZ8nGjo4Xpr4oMtMg2K1G

# Optional reCAPTCHA v2 configuration
# ~~~~~
# The request timeout used when calling the reCAPTCHA web service API, defaults to 10 seconds
#recpatcha.requestTimeout=10 seconds

# The reCAPTCHA widget theme to use, possible values include dark or light, defaults to light
recaptcha.theme=light

# The reCAPTCHA type to use, possible values are image or audio, defaults to image
recaptcha.type=image



akka.loggers = ["akka.event.slf4j.Slf4jLogger"]

play.modules.disabled = ["play.api.cache.EhCacheModule"]
logger-startup-timeout = 5s

#play.modules.enabled += "DemoModule"
play.modules.enabled += "modules.SilhouetteModule"
play.modules.enabled +="com.kenshoo.play.metrics.PlayModule"

#play.modules.enabled += "utils.MessageQueueConnection"



# Registers the request handler
# ~~~~~
play.http.requestHandler = "play.api.http.DefaultHttpRequestHandler"


play.http.filters = "utils.Filters"
play.http.errorHandler = "utils.ErrorHandler"

# Auth error handler
play.modules.disabled += "com.mohiva.play.silhouette.api.actions.SecuredErrorHandlerModule"
play.modules.disabled += "com.mohiva.play.silhouette.api.actions.UnsecuredErrorHandlerModule"



play.filters {
  # CORS filter configuration
  cors {

    # The path prefixes to filter.
    pathPrefixes = ["/"]

    # The allowed origins. If null, all origins are allowed.
    allowedOrigins = null

    # The allowed HTTP methods. If null, all methods are allowed
    allowedHttpMethods = null

    # The allowed HTTP headers. If null, all headers are allowed.
    allowedHttpHeaders = null

    # The exposed headers
    exposedHeaders = []

    # Whether to support credentials
    supportsCredentials = true

    # The maximum amount of time the CORS meta data should be cached by the client
    preflightMaxAge = 1 hour
  }
}
play.filters.headers.contentSecurityPolicy = null

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
#application.global=a.bug.Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `conf/my.application.Router`,
# you may need to define a router file `my.application.routes`.
# Default to Routes in the root package (and `conf/routes`)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#

slick.dbs.default.driver="slick.driver.PostgresDriver$"
slick.dbs.default.db.driver="org.postgresql.Driver"
slick.dbs.default.db.url="jdbc:postgresql://localhost/minority3"
slick.dbs.default.db.user="postgres"
slick.dbs.default.db.password="12344321"

testdb = {
  url = "jdbc:h2:mem:test"
  driver = org.h2.Driver
  connectionPool = disabled
  keepAliveConnection = true
}

minoritydb = {
  driver = org.postgresql.Driver
#  driver = "slick.driver.PostgresDriver$"
  #dataSourceClass = "org.postgresql.ds.PGSimpleDataSource"
  jdbcUrl = "jdbc:postgresql://localhost/minority3"
  url = "jdbc:postgresql://localhost/minority3"
  #keepAliveConnection = true
  poolConnectionTimeoutMillis=30000
  properties = {
    databaseName = "minority3"
    user = "postgres"
    password = "12344321"
  }
    db {
    driver = org.postgresql.Driver
    connectionPool = HikariCP
    user = postgres
    password = "12344321"
  }
  numThreads = 10
}
minoritydbF = {
  numThreads = 10
  poolConnectionTimeoutMillis=30000
  driver = "slick.driver.PostgresDriver$"
  db {
    url = "jdbc:postgresql://localhost/minority3"
    driver = org.postgresql.Driver
    connectionPool = HikariCP
    user = postgres
    password = "12344321"
  }
}


#org.postgresql.Driver


#db.default.driver=org.postgresql.Driver
#db.default.url="jdbc:postgresql://localhost/minority_bug"
#db.default.user=postgres
#db.default.password="12344321"
#db.default.slickdriver="models.DAO.driver.MyPostgresDriver"
#slick.default="models.User"
postgres {
  poolConnectionTimeoutMillis=30000
  driver = "slick.driver.PostgresDriver$"
  db {
    url = "jdbc:postgresql://localhost/minority3"
    driver = org.postgresql.Driver
    connectionPool = HikariCP
    user = postgres
    password = "12344321"
  }
    numThreads = 10
}


db.default.hikaricp.file="conf/db.default.hikaricp.file"

#
# You can expose this datasource via JNDI if needed (Useful for JPA)
# db.default.jndiName=DefaultDS

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled
dbplugin=disabled
db.default.driver=org.postgresql.Driver
db.default.url="jdbc:postgresql://localhost:5432/minority3"
db.default.username="postgres"
db.default.password="12344321"


db.default.migration.auto=false
flywayplugin=disabled
evolutionplugin=disabled
db.default.migration.validateOnMigrate=false
db.default.migration.initOnMigrate=false
db.default.migration.auto=false
# Ebean configuration
# ~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
#
# ebean.default="models.*"


# Paypal

paypal.token="AUdoZRD62BWfWg6uanwu_5M28QYc_0WbZeV9SUZc4tdRKXeqGljDiScvlHCY"
paypal.secret="EGZwJBCXqrR4zjxzUq3khPAwX8MlSapujo4Y6-4Za4qGbycTB46OI--anhQC"
paypal.endPoint="api.paypal.com"
#paypal.token="AWX9tRD07ESEGAqdP_5Qvb4M1Oz7nPsafZCdoDLFLNps7xMqEGi61GYsM6Zw"
#paypal.secret="EBSkDRBwtebAqOs-s-qdZrqb0xb4EOq3RunKLqKwQ6WIEMKStswVq7l7lWAu"
#paypal.endPoint="api.sandbox.paypal.com"

# Akka misc

akka.default-dispatcher.fork-join-executor.pool-size-max=64
akka.actor.debug.receive = on
akka.logger-startup-timeout = 30s
akka.jvm-exit-on-fatal-error = true


# Mails
#
mails.sendAlreadyRegisteredEmail.subject=Sign up instructions | Minority
mails.sendSignUpEmail.subject=Sign up instructions | Minority
mails.welcomeEmail.subject=Welcome | Minority
mails.passwordResetEmail.subject=Password reset instructions | Minority
mails.unknownEmail.subject=Password reset request | Minority
mails.passwordResetOk.subject=Password change confirmation | Minority




play.mailer {
  host=smtp.gmail.com
  port=465
  ssl=true
  user="iamjacke@gmail.com"
  password="ahqxxmxaloggqxhj"
  #password="ya29..zAJ6kXxulpQW9_kbaFixtTeW3Tkt19b-4U_a-Q4Yt7zLC7dyiOjDkGb-V0W-ZJ2r8gA"
  from="iamjacke@gmail.com"

}

#mail.smtp.auth.mechanisms = "XOAUTH2"



blocking-process-io-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    core-pool-size-min = 3
    core-pool-size-factor = 1.0
    core-pool-size-max = 100
  }
}

#db.default.user="postgres"
#db.default.password="12344321"
## Connection Pool settings
#db.default.poolInitialSize=10
#db.default.poolMaxSize=20
#db.default.connectionTimeoutMillis=1000
#
## Connection Pool settings
#db.default.poolInitialSize=5
#db.default.poolMaxSize=7
#db.default.poolConnectionTimeoutMillis=1000
#db.default.poolValidationQuery="select 1 as one"
#db.default.poolFactoryName="commons-dbcp"
#
## PostgreSQL example
#db.default.driver="org.postgresql.Driver"
#db.default.url="jdbc:postgresql://localhost/minority3"
#
#scalikejdbc.global.loggingSQLAndTime.enabled=true
#scalikejdbc.global.loggingSQLAndTime.logLevel=info
#scalikejdbc.global.loggingSQLAndTime.warningEnabled=true
#scalikejdbc.global.loggingSQLAndTime.warningThresholdMillis=1000
#scalikejdbc.global.loggingSQLAndTime.warningLogLevel=warn
#scalikejdbc.global.loggingSQLAndTime.singleLineMode=false
#scalikejdbc.global.loggingSQLAndTime.printUnprocessedStackTrace=false
#scalikejdbc.global.loggingSQLAndTime.stackTraceDepth=10#




include "silhouette.conf"
